@startuml

class Ship{
gun : Gun
position : Position
direction : Int

setGun(gun : Gun) : Ship
shoot() : Bullet
}

class Asteriod{
healt : Double
position : Position
size : Double
initialPosition: Position
finalPosition: Position
velocity : Double
points : Int
destroy : DestroyStrategy

destroy() : List<Asteriod>
destroyWithGun() : Gun
}

interface DestroyStrategy{
destroy() : List<Asteriod>
}

class destroyAsteroid implements DestroyStrategy{
destroy() : List<Asteriod>
}

class divideAsteroid implements DestroyStrategy{
numberOfDivisions : Int
velocity : Double
destroy() : List<Asteriod>
}

interface Gun{
number : Int
bullet : Bullet
ammo : Int
shoot() : List<Bullet>
}

class Laser implements Gun{
}

class normalShoot implements Gun{
}

class MegaBomb implements Gun{
}


class Bullet{
velocity : Double
position : Position
sizeX : Double
sizeY : Double
}

class Position{
x : Double
y : Double
}

class Level{
spawnRate: Int
pointsToLevelUp: Int
number : Int
}

class Game{
Ship : Ship
Level : Level
}

interface Serializable{
toJson() : JSONObject
}


interface Movable{}

class Constats{}

class Game{}

@enduml